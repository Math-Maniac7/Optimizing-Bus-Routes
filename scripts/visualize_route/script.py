import json
import pandas as pd
import matplotlib.pyplot as plt
from textwrap import dedent

raw = dedent("""
30.6224050000 -96.3530550000
30.6224740000 -96.3530460000
30.6227494000 -96.3527618000
30.6221007000 -96.3520334000
30.6216900000 -96.3515590000
30.6214869000 -96.3513610000
30.6211478000 -96.3509952000
30.6207911000 -96.3506345000
30.6202932000 -96.3501158000
30.6197139000 -96.3495122000
30.6191865000 -96.3489752000
30.6180060000 -96.3477460000
30.6177699000 -96.3475106000
30.6176918000 -96.3474355000
30.6176418000 -96.3473875000
30.6175578000 -96.3472993000
30.6174546000 -96.3471965000
30.6172795000 -96.3470219000
30.6171967000 -96.3469393000
30.6172406000 -96.3468884000
30.6172463000 -96.3468810000
30.6172397000 -96.3468639000
30.6172414000 -96.3468485000
30.6172674000 -96.3468195000
30.6172615000 -96.3468122000
30.6172306000 -96.3467694000
30.6171761000 -96.3466938000
30.6171516000 -96.3466614000
30.6178509000 -96.3459059000
30.6178286000 -96.3457412000
30.6178200000 -96.3457100000
30.6177869000 -96.3456471000
30.6177381000 -96.3455764000
30.6176978000 -96.3454947000
30.6176728000 -96.3454213000
30.6176490000 -96.3453421000
30.6176154000 -96.3452532000
30.6175778000 -96.3451857000
30.6175289000 -96.3451112000
30.6173669000 -96.3448890000
30.6173443000 -96.3448598000
30.6173117000 -96.3448177000
30.6171833000 -96.3446517000
30.6171231000 -96.3445741000
30.6169109000 -96.3442595000
30.6167954000 -96.3440964000
30.6167058000 -96.3439775000
30.6166159000 -96.3438615000
30.6165868000 -96.3438213000
30.6165490000 -96.3437710000
30.6164850000 -96.3436710000
30.6164298000 -96.3435569000
30.6164098000 -96.3434800000
30.6164019000 -96.3434019000
30.6164002000 -96.3433354000
30.6164073000 -96.3432508000
30.6164262000 -96.3431571000
30.6164465000 -96.3430816000
30.6164680000 -96.3430206000
30.6164284000 -96.3429833000
30.6164033000 -96.3429597000
30.6162328000 -96.3427990000
30.6162704000 -96.3426899000
30.6158862000 -96.3423288000
30.6156528000 -96.3421129000
30.6155290000 -96.3413960000
30.6155123000 -96.3413806000
30.6156500000 -96.3411490000
30.6154815000 -96.3410066000
30.6154607000 -96.3409890000
30.6153650000 -96.3406201000
30.6156056000 -96.3402487000
30.6156941000 -96.3401344000
30.6157389000 -96.3401387000
30.6159251000 -96.3398579000
30.6159471000 -96.3398248000
30.6163008000 -96.3392730000
30.6161433000 -96.3391743000
""").strip().splitlines()

coords = []
for line in raw:
    lat_str, lon_str = line.strip().split()
    coords.append((float(lat_str), float(lon_str)))

df = pd.DataFrame(coords, columns=["latitude", "longitude"])

# build plot
plt.figure(figsize=(6, 6))
plt.plot(df["longitude"], df["latitude"], marker='o', linewidth=1)
plt.scatter([df["longitude"].iloc[0]], [df["latitude"].iloc[0]], s=60, label="Start")
plt.scatter([df["longitude"].iloc[-1]], [df["latitude"].iloc[-1]], s=60, marker="s", label="End")
plt.gca().set_xlabel("Longitude")
plt.gca().set_ylabel("Latitude")
plt.gca().set_aspect('equal', adjustable='box')
plt.grid(True)
plt.legend()
plt.title("path")
png_path = "./coords_plot.png"
plt.tight_layout()
plt.savefig(png_path, dpi=150)
plt.show()

# coordinate csv
csv_path = "./coords.csv"
df.to_csv(csv_path, index=False)

# GeoJSON, import in https://www.gpsvisualizer.com/draw/ to visualize
geojson = {
    "type": "FeatureCollection",
    "features": [
        {
            "type": "Feature",
            "geometry": {
                "type": "LineString",
                "coordinates": [[lon, lat] for lat, lon in coords],
            },
            "properties": {"name": "Route"}
        },
        *[{
            "type": "Feature",
            "geometry": {"type": "Point", "coordinates": [lon, lat]},
            "properties": {"index": i}
        } for i, (lat, lon) in enumerate(coords)]
    ]
}
geojson_path = "./coords.geojson"
with open(geojson_path, "w") as f:
    json.dump(geojson, f)

png_path, csv_path, geojson_path
